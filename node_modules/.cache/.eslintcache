[{"C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\index.tsx":"1","C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\theme.ts":"2","C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\App.tsx":"3","C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\Routes\\Search.tsx":"4","C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\Routes\\Home.tsx":"5","C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\Components\\Header.tsx":"6","C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\Routes\\Tv.tsx":"7","C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\utils.ts":"8","C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\api.tsx":"9"},{"size":2177,"mtime":1651908156731,"results":"10","hashOfConfig":"11"},{"size":269,"mtime":1651827626872,"results":"12","hashOfConfig":"11"},{"size":599,"mtime":1652277298438,"results":"13","hashOfConfig":"11"},{"size":241,"mtime":1652002055102,"results":"14","hashOfConfig":"11"},{"size":7059,"mtime":1652004407841,"results":"15","hashOfConfig":"11"},{"size":5853,"mtime":1652004234995,"results":"16","hashOfConfig":"11"},{"size":59,"mtime":1651854265184,"results":"17","hashOfConfig":"11"},{"size":141,"mtime":1651908114458,"results":"18","hashOfConfig":"11"},{"size":578,"mtime":1651908168836,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1pt0dxy",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\index.tsx",[],["41","42"],"C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\theme.ts",[],"C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\App.tsx",[],"C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\Routes\\Search.tsx",[],"C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\Routes\\Home.tsx",["43"],"import { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\r\nimport { getMovies, IGetMoviesResult } from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport { useState } from \"react\";\r\nimport { Link, useRouteMatch, useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  background: black;\r\n  padding-bottom: 200px;\r\n  overflow-x:hidden;\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  height: 20vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Banner = styled.div<{ bgPhoto: string }>`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 60px;\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\r\n    url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 68px;\r\n  margin-bottom: 20px; ;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 30px;\r\n  width: 50%;\r\n`;\r\n\r\nconst Slider = styled.div`\r\n  position: relative;\r\n  top: -100px;\r\n`;\r\n\r\nconst Row = styled(motion.div)`\r\n  display: grid;\r\n  gap: 5px;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  position: absolute;\r\n  width: 100%;\r\n`;\r\n\r\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\r\n  background-color: white;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 200px;\r\n  font-size: 66px;\r\n  &:first-child {\r\n    transform-origin: center left;\r\n  }\r\n  &:last-child {\r\n    transform-origin: center right;\r\n  }\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Info = styled(motion.div)`\r\n  padding: 10px;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n  h4 {\r\n    text-align: center;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst Overlay = styled(motion.div)`\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  opacity: 0;\r\n`;\r\n\r\nconst BigMovie = styled(motion.div)`\r\n  position: absolute;\r\n  width: 40vw;\r\n  height: 80vh;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n`;\r\n\r\nconst BigCover = styled.div`\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 400px;\r\n`;\r\n\r\nconst BigTitle = styled.h3`\r\n  color: ${(props) => props.theme.white.lighter};\r\n  padding: 20px;\r\n  font-size: 46px;\r\n  position: relative;\r\n  top: -80px;\r\n`;\r\n\r\nconst BigOverview = styled.p`\r\n  padding: 20px;\r\n  position: relative;\r\n  top: -80px;\r\n  color: ${(props) => props.theme.white.lighter};\r\n`;\r\n\r\n\r\n\r\nconst rowVariants = {\r\n  hidden: {\r\n    x: window.innerWidth + 5,\r\n  },\r\n  visible: {\r\n    x: 0,\r\n  },\r\n  exit: {\r\n    x: -window.innerWidth - 5,\r\n  },\r\n};\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    scale: 1.3,\r\n    y: -80,\r\n    transition: {\r\n      delay: 0.5,\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst infoVariants = {\r\n  hover: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.5,\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\n\r\nconst offset = 6;\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\r\n  const { scrollY } = useViewportScroll();\r\n  const { data, isLoading } = useQuery<IGetMoviesResult>(\r\n    [\"movies\", \"nowPlaying\"],\r\n    getMovies\r\n  );\r\n  const [index, setIndex] = useState(0);\r\n  const [leaving, setLeaving] = useState(false);\r\n  const incraseIndex = () => {\r\n    if (data) {\r\n      if (leaving) return;\r\n      toggleLeaving();\r\n      const totalMovies = data.results.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n    }\r\n  };\r\n  const toggleLeaving = () => setLeaving((prev) => !prev);\r\n  const onBoxClicked = (movieId: number) => {\r\n    history.push(`/movies/${movieId}`);\r\n  };\r\n  const onOverlayClick = () => history.push(\"/\");\r\n  const clickedMovie =\r\n    bigMovieMatch?.params.movieId &&\r\n    data?.results.find((movie) => movie.id === +bigMovieMatch.params.movieId);\r\n  return (\r\n    <Wrapper>\r\n    {isLoading ? (\r\n      <Loader>Loading...</Loader>\r\n    ) : (\r\n      <>\r\n        <Banner\r\n          onClick={incraseIndex}\r\n          bgPhoto={makeImagePath(data?.results[0].backdrop_path || \"\")}\r\n        >\r\n          <Title>{data?.results[0].title}</Title>\r\n          <Overview>{data?.results[0].overview}</Overview>\r\n        </Banner>\r\n        <Slider>\r\n        <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\r\n            <Row\r\n              variants={rowVariants}\r\n              initial=\"hidden\"\r\n              animate=\"visible\"\r\n              exit=\"exit\"\r\n              transition={{ type: \"tween\", duration: 1 }}\r\n              key={index}\r\n            >\r\n              {data?.results\r\n                  .slice(1)\r\n                  .slice(offset * index, offset * index + offset)\r\n                  .map((movie) => (\r\n                    <Box\r\n                      layoutId={movie.id + \"\"}\r\n                      key={movie.id}\r\n                      whileHover=\"hover\"\r\n                      initial=\"normal\"\r\n                      variants={boxVariants}\r\n                      onClick={() => onBoxClicked(movie.id)}\r\n                      transition={{ type: \"tween\" }}\r\n                      bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\r\n                      >\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{movie.title}</h4>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n            </Row>\r\n          </AnimatePresence>\r\n        </Slider>\r\n        <AnimatePresence>\r\n            {bigMovieMatch ? (\r\n              <>\r\n              <Overlay\r\n                onClick={onOverlayClick}\r\n                exit={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n              />\r\n              <BigMovie\r\n                style={{ top: scrollY.get() + 100 }}\r\n                layoutId={bigMovieMatch.params.movieId}\r\n              >\r\n                {clickedMovie && (\r\n                    <>\r\n                      <BigCover\r\n                        style={{\r\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                            clickedMovie.backdrop_path,\r\n                            \"w500\"\r\n                          )})`,\r\n                        }}\r\n                      />\r\n                      <BigTitle>{clickedMovie.title}</BigTitle>\r\n                      <BigOverview>{clickedMovie.overview}</BigOverview>\r\n                    </>\r\n                  )}\r\n              </BigMovie>\r\n            </>\r\n            ) : null}\r\n          </AnimatePresence>\r\n      </>\r\n    )}\r\n  </Wrapper>\r\n  );\r\n}\r\nexport default Home;","C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\Components\\Header.tsx",[],"C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\Routes\\Tv.tsx",["44"],"function Tv() {\r\n  return <h1></h1>;\r\n}\r\nexport default Tv;","C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\utils.ts",[],"C:\\Users\\USER\\Desktop\\new-node-folder\\nomflix-clone\\src\\api.tsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":7,"column":10,"nodeType":"51","messageId":"52","endLine":7,"endColumn":14},{"ruleId":"53","severity":1,"message":"54","line":2,"column":10,"nodeType":"55","endLine":2,"endColumn":14},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]